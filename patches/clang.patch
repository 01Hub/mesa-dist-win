diff --git a/meson.build b/meson.build
index 8b8ffc95aab..ed7f93eac16 100644
--- a/meson.build
+++ b/meson.build
@@ -1089,7 +1089,18 @@ elif host_machine.system() == 'windows'
       '-DNOMINMAX',
     ]
   else
-    pre_args += ['-D__MSVCRT_VERSION__=0x0700']
+    # When the target is not mingw/ucrt
+    # NOTE: clang's stddef.h are conflict with mingw/ucrt's stddef.h
+    # So do not include headers that defined in clang for detecting
+    # _UCRT
+    if cc.compiles('''
+      #include <string.h>
+      #if defined(__MINGW32__) && defined(_UCRT)
+      #error
+      #endif
+      int main(void) { return 0; }''')
+      pre_args += ['-D__MSVCRT_VERSION__=0x0700']
+    endif
   endif
 elif host_machine.system() == 'openbsd'
   pre_args += '-D_ISOC11_SOURCE'
diff --git a/src/compiler/nir/nir.h b/src/compiler/nir/nir.h
index 019e60f9238..3a0f0e705c2 100644
--- a/src/compiler/nir/nir.h
+++ b/src/compiler/nir/nir.h
@@ -55,8 +55,10 @@
 #include "nir_opcodes.h"
 
 #if defined(_WIN32) && !defined(snprintf)
+#if (defined(_MSC_VER) && _MSC_VER < 1900) || (defined(__MINGW32__) && !defined(_UCRT))
 #define snprintf _snprintf
 #endif
+#endif
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/src/compiler/nir/nir_lower_atomics_to_ssbo.c b/src/compiler/nir/nir_lower_atomics_to_ssbo.c
index c1799d0b9d0..448f63bdc7c 100644
--- a/src/compiler/nir/nir_lower_atomics_to_ssbo.c
+++ b/src/compiler/nir/nir_lower_atomics_to_ssbo.c
@@ -27,10 +27,6 @@
 #include "nir.h"
 #include "nir_builder.h"
 
-#if defined(_WIN32) && !defined(snprintf)
-#define snprintf _snprintf
-#endif
-
 /*
  * Remap atomic counters to SSBOs, starting from the shader's next SSBO slot
  * (info.num_ssbos).
diff --git a/src/compiler/spirv/vtn_private.h b/src/compiler/spirv/vtn_private.h
index 93985f54f86..24958cc13d7 100644
--- a/src/compiler/spirv/vtn_private.h
+++ b/src/compiler/spirv/vtn_private.h
@@ -41,7 +41,7 @@ struct vtn_builder;
 struct vtn_decoration;
 
 /* setjmp/longjmp is broken on MinGW: https://sourceforge.net/p/mingw-w64/bugs/406/ */
-#ifdef __MINGW32__
+#if defined(__MINGW32__) && !defined(_UCRT)
   #define vtn_setjmp __builtin_setjmp
   #define vtn_longjmp __builtin_longjmp
 #else
diff --git a/src/gallium/include/pipe/p_config.h b/src/gallium/include/pipe/p_config.h
index 978aa455ecbb4801b269f50bf30e1f7dd574c1d0..86c35fffaf69a7176d52da9331b5729bacac5c63 100644
--- a/src/gallium/include/pipe/p_config.h
+++ b/src/gallium/include/pipe/p_config.h
@@ -54,6 +54,9 @@
 #if defined(__GNUC__)
 #define PIPE_CC_GCC
 #define PIPE_CC_GCC_VERSION (__GNUC__ * 100 + __GNUC_MINOR__)
+#if !defined(__clang__)
+#define PIPE_CC_GCC_REAL /* Not faked by clang or other compiler(update the macro condition). */
+#endif
 #endif
 
 /*
@@ -96,8 +99,8 @@
 #else
 #define PIPE_ARCH_SSE
 #endif
-#if defined(PIPE_CC_GCC) && (__GNUC__ * 100 + __GNUC_MINOR__) < 409 && !defined(__SSSE3__)
-/* #warning SSE3 support requires -msse3 compiler options before GCC 4.9 */
+#if defined(PIPE_CC_GCC_REAL) && PIPE_CC_GCC_VERSION < 409 && !defined(__SSSE3__)
+/* #warning SSE3 support requires -msse3 compiler options before GCC(not clang) 4.9 */
 #else
 #define PIPE_ARCH_SSSE3
 #endif
diff --git a/src/intel/isl/isl_tiled_memcpy.c b/src/intel/isl/isl_tiled_memcpy.c
index b3ec54af64b9b5d90f5f62cc958fa29f2795a0a6..491889b929d1b83788cb63b753f176d32c308e0b 100644
--- a/src/intel/isl/isl_tiled_memcpy.c
+++ b/src/intel/isl/isl_tiled_memcpy.c
@@ -32,16 +32,11 @@
 #include <string.h>
 
 #include "util/macros.h"
+#include "util/u_sse.h"
 #include "main/macros.h"
 
 #include "isl_priv.h"
 
-#if defined(__SSSE3__)
-#include <tmmintrin.h>
-#elif defined(__SSE2__)
-#include <emmintrin.h>
-#endif
-
 #define FILE_DEBUG_FLAG DEBUG_TEXTURE
 
 #define ALIGN_DOWN(a, b) ROUND_DOWN_TO(a, b)
