From c16460f2551be02f5ce6ac89b7217e15647840fb Mon Sep 17 00:00:00 2001
From: Jesse Natalie <jenatali@microsoft.com>
Date: Tue, 7 Feb 2023 11:16:11 -0800
Subject: [PATCH 1/3] clc: Include opencl-c-base.h with LLVM 15 (using
 builtins)

Reviewed-by: Karol Herbst <kherbst@redhat.com>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/21168>
(cherry picked from commit b27d8ee2e916290a49943586726521ad2378a45f)
---
 src/compiler/clc/clc_helpers.cpp | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/compiler/clc/clc_helpers.cpp b/src/compiler/clc/clc_helpers.cpp
index fe30b6aac0f8..80bc84831e4e 100644
--- a/src/compiler/clc/clc_helpers.cpp
+++ b/src/compiler/clc/clc_helpers.cpp
@@ -849,12 +849,16 @@ clc_compile_to_llvm_module(LLVMContext &llvm_ctx,
       ::llvm::sys::path::append(system_header_path, "opencl-c.h");
       c->getPreprocessorOpts().addRemappedFile(system_header_path.str(),
          ::llvm::MemoryBuffer::getMemBuffer(llvm::StringRef(opencl_c_source, ARRAY_SIZE(opencl_c_source) - 1)).release());
+      ::llvm::sys::path::remove_filename(system_header_path);
 #endif
 
-      ::llvm::sys::path::remove_filename(system_header_path);
       ::llvm::sys::path::append(system_header_path, "opencl-c-base.h");
       c->getPreprocessorOpts().addRemappedFile(system_header_path.str(),
          ::llvm::MemoryBuffer::getMemBuffer(llvm::StringRef(opencl_c_base_source, ARRAY_SIZE(opencl_c_base_source) - 1)).release());
+
+#if LLVM_VERSION_MAJOR >= 15
+      c->getPreprocessorOpts().Includes.push_back("opencl-c-base.h");
+#endif
    }
 #else
    // GetResourcePath is a way to retrive the actual libclang resource dir based on a given binary
-- 
GitLab


From a93a4a9f7e9ecbc27a4845e36e6954ae546f4927 Mon Sep 17 00:00:00 2001
From: Faith Ekstrand <faith.ekstrand@collabora.com>
Date: Fri, 10 Feb 2023 16:21:19 -0600
Subject: [PATCH 2/3] nir/deref: Preserve alignments in opt_remove_cast_cast()

This also removes the loop so opt_remove_cast_cast() will only optimize
cast(cast(x)) and not cast(cast(cast(x))).  However, since nir_opt_deref
walks instructions top-down, there will almost never be a tripple cast
because the parent cast will have opt_remove_cast_cast() run on it.

Reviewed-by: Jesse Natalie <jenatali@microsoft.com>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/21252>
(cherry picked from commit af9212dd82b8885e0d94921e8500b90561faa5e0)
---
 src/compiler/nir/nir_deref.c | 27 ++++++++++++++++++---------
 1 file changed, 18 insertions(+), 9 deletions(-)

diff --git a/src/compiler/nir/nir_deref.c b/src/compiler/nir/nir_deref.c
index e03be3ac6620..3de401d9853d 100644
--- a/src/compiler/nir/nir_deref.c
+++ b/src/compiler/nir/nir_deref.c
@@ -1024,19 +1024,28 @@ opt_remove_restricting_cast_alignments(nir_deref_instr *cast)
 static bool
 opt_remove_cast_cast(nir_deref_instr *cast)
 {
-   nir_deref_instr *first_cast = cast;
+   nir_deref_instr *parent = nir_deref_instr_parent(cast);
+   if (parent == NULL || parent->deref_type != nir_deref_type_cast)
+      return false;
 
-   while (true) {
-      nir_deref_instr *parent = nir_deref_instr_parent(first_cast);
-      if (parent == NULL || parent->deref_type != nir_deref_type_cast)
-         break;
-      first_cast = parent;
+   /* Copy align info from the parent cast if needed
+    *
+    * In the case that align_mul = 0, the alignment for this cast is inhereted
+    * from the parent deref (if any). If we aren't careful, removing our
+    * parent cast from the chain may lose alignment information so we need to
+    * copy the parent's alignment information (if any).
+    *
+    * opt_remove_restricting_cast_alignments() above is run before this pass
+    * and will will have cleared our alignment (set align_mul = 0) in the case
+    * where the parent's alignment information is somehow superior.
+    */
+   if (cast->cast.align_mul == 0) {
+      cast->cast.align_mul = parent->cast.align_mul;
+      cast->cast.align_offset = parent->cast.align_offset;
    }
-   if (cast == first_cast)
-      return false;
 
    nir_instr_rewrite_src(&cast->instr, &cast->parent,
-                         nir_src_for_ssa(first_cast->parent.ssa));
+                         nir_src_for_ssa(parent->parent.ssa));
    return true;
 }
 
-- 
GitLab


From 5be7b9f07d02493904ea242926d6815cf2664add Mon Sep 17 00:00:00 2001
From: Jesse Natalie <jenatali@microsoft.com>
Date: Tue, 7 Feb 2023 11:17:03 -0800
Subject: [PATCH 3/3] microsoft/clc: Set features that are used by CL tests

Reviewed-by: Karol Herbst <kherbst@redhat.com>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/21168>
(cherry picked from commit e9ab33c9a18fa8160f38cffab19733d405455026)
---
 src/microsoft/clc/compute_test.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/microsoft/clc/compute_test.cpp b/src/microsoft/clc/compute_test.cpp
index 9a2d2e9e5ecf..f3ee0efeedc7 100644
--- a/src/microsoft/clc/compute_test.cpp
+++ b/src/microsoft/clc/compute_test.cpp
@@ -795,6 +795,9 @@ ComputeTest::compile(const std::vector<const char *> &sources,
    };
    args.args = compile_args.data();
    args.num_args = (unsigned)compile_args.size();
+   args.features.images = true;
+   args.features.images_read_write = true;
+   args.features.int64 = true;
    ComputeTest::Shader shader;
 
    std::vector<Shader> shaders;
-- 
GitLab

